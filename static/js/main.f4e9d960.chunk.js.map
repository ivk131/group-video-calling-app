{"version":3,"sources":["settings.js","Video.js","Controls.js","VideoCall.js","App.js","index.js"],"names":["config","mode","codec","appId","token","useClient","createClient","useMicrophoneAndCameraTracks","createMicrophoneAndCameraTracks","channelName","Video","props","users","tracks","useState","gridSpacing","setGridSpacing","useEffect","Math","max","floor","length","console","log","Grid","container","style","height","spacing","item","xs","lg","sm","videoTrack","width","position","Box","bottom","left","zIndex","background","padding","borderRadius","Typography","variant","map","user","minHeight","uid","Controls","client","setStart","setInCall","video","audio","trackState","setTrackState","mute","type","a","setEnabled","ps","leaveChannel","leave","removeAllListeners","close","p","justifyContent","alignItems","flexGrow","Tooltip","title","IconButton","color","onClick","pl","VideoCall","setUsers","start","ready","init","name","on","mediaType","subscribe","prevUsers","audioTrack","play","stop","filter","User","join","publish","error","direction","overflow","App","inCall","className","Button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4e9d960.chunk.js","sourcesContent":["import { createClient, createMicrophoneAndCameraTracks } from \"agora-rtc-react\";\n\nconst appId = \"002d67ae068040be96b28ec17b115ea8\";\nconst token =\n  \"007eJxTYBAVfhIw2ViuxvnLZGFth/u3/mgzZVXcLRfebhL60oi1skyBwcDAKMXMPDHVwMzCwMQgKdXSLMnIIjXZ0DzJ0NA0NdFiT0RyckMgI8OSDCcmRgYIBPHZGFJSc/N1DRkYAL0/HR4=\";\n\n// (\"007eJxTYBAVfhIw2ViuxvnLZGFth/u3/mgzZVXcLRfebhL60oi1skyBwcDAKMXMPDHVwMzCwMQgKdXSLMnIIjXZ0DzJ0NA0NdFiT0RyckMgI8OSDCcmRgYIBPHZGFJSc/N1DRkYAL0/HR4=\");\nexport const config = { mode: \"rtc\", codec: \"vp8\", appId: appId, token: token };\nexport const useClient = createClient(config);\nexport const useMicrophoneAndCameraTracks = createMicrophoneAndCameraTracks();\nexport const channelName = \"demo-1\";\n","import { AgoraVideoPlayer } from \"agora-rtc-react\";\nimport { Grid, Box, Card, Typography } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Video(props) {\n  const { users, tracks } = props;\n  const [gridSpacing, setGridSpacing] = useState(12);\n\n  useEffect(() => {\n    setGridSpacing(Math.max(Math.floor(12 / (users.length + 1)), 4));\n    console.log(\"gridSpacing\", gridSpacing);\n  }, [users, tracks]);\n\n  console.log(\"users, tracks\", users, tracks);\n\n  return (\n    <Grid container style={{ height: \"100%\" }} spacing={1}>\n      <Grid item xs={6} lg={3} sm={gridSpacing}>\n        <AgoraVideoPlayer\n          videoTrack={tracks[1]}\n          style={{ height: \"100%\", width: \"100%\", position: \"relative\" }}\n        >\n          <Box\n            style={{\n              position: \"absolute\",\n              bottom: \"1%\",\n              left: \"2%\",\n              zIndex: 1,\n              background: \"#fafafa\",\n              padding: \"2px 4px\",\n              borderRadius: \"4px\",\n            }}\n          >\n            <Typography variant=\"body2\">Vikash Kumar</Typography>\n          </Box>\n        </AgoraVideoPlayer>\n      </Grid>\n      {users.length > 0 &&\n        users.map(user => {\n          if (user.videoTrack) {\n            return (\n              <Grid\n                item\n                xs={6}\n                lg={3}\n                sm={gridSpacing}\n                style={{ minHeight: \"230px\", borderRadius: \"16px\" }}\n              >\n                <AgoraVideoPlayer\n                  videoTrack={user.videoTrack}\n                  key={user.uid}\n                  style={{\n                    position: \"relative\",\n                    height: \"100%\",\n                    width: \"100%\",\n                    borderRadius: \"16px\",\n                    background: \"#f2f4f6\",\n                  }}\n                >\n                  <Box\n                    style={{\n                      position: \"absolute\",\n                      bottom: \"1%\",\n                      left: \"2%\",\n                      zIndex: 1,\n                      background: \"#fafafa\",\n                      padding: \"2px 4px\",\n                      borderRadius: \"4px\",\n                    }}\n                  >\n                    <Typography variant=\"body2\">{user.uid} </Typography>\n                  </Box>\n                </AgoraVideoPlayer>\n              </Grid>\n            );\n          } else return null;\n        })}\n    </Grid>\n  );\n}\n","import { useState } from \"react\";\nimport { useClient } from \"./settings\";\nimport { Grid, Button, Box, IconButton, Tooltip } from \"@material-ui/core\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport GroupsIcon from \"@material-ui/icons/GroupSharp\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\n\nexport default function Controls(props) {\n  const client = useClient();\n  const { tracks, setStart, setInCall } = props;\n  const [trackState, setTrackState] = useState({ video: true, audio: true });\n\n  const mute = async type => {\n    if (type === \"audio\") {\n      await tracks[0].setEnabled(!trackState.audio);\n      setTrackState(ps => {\n        return { ...ps, audio: !ps.audio };\n      });\n    } else if (type === \"video\") {\n      await tracks[1].setEnabled(!trackState.video);\n      setTrackState(ps => {\n        return { ...ps, video: !ps.video };\n      });\n    }\n  };\n\n  const leaveChannel = async () => {\n    await client.leave();\n    client.removeAllListeners();\n    tracks[0].close();\n    tracks[1].close();\n    setStart(false);\n    setInCall(false);\n  };\n\n  return (\n    <Box\n      style={{ background: \"#f2f4f6\", borderRadius: \"8px\" }}\n      p={2}\n      justifyContent=\"center\"\n    >\n      <Grid container spacing={2} alignItems=\"center\">\n        <Box flexGrow={0.5} />\n        <Grid item>\n          <Tooltip title={trackState.audio ? \"Mute\" : \"Unmute\"}>\n            <IconButton\n              variant=\"contained\"\n              color={trackState.audio ? \"primary\" : \"secondary\"}\n              onClick={() => mute(\"audio\")}\n            >\n              {trackState.audio ? <MicIcon /> : <MicOffIcon />}\n            </IconButton>\n          </Tooltip>\n\n          {/* <Button\n            variant=\"contained\"\n            color={trackState.audio ? \"primary\" : \"secondary\"}\n            onClick={() => mute(\"audio\")}\n          >\n            {trackState.audio ? <MicIcon /> : <MicOffIcon />}\n          </Button> */}\n        </Grid>\n        <Grid item>\n          <Tooltip title={trackState.video ? \"Hide\" : \"Show\"}>\n            <IconButton\n              variant=\"contained\"\n              color={trackState.video ? \"primary\" : \"secondary\"}\n              onClick={() => mute(\"video\")}\n            >\n              {trackState.video ? <VideocamIcon /> : <VideocamOffIcon />}\n            </IconButton>\n          </Tooltip>\n\n          {/* <Button\n            variant=\"contained\"\n            color={trackState.video ? \"primary\" : \"secondary\"}\n            onClick={() => mute(\"video\")}\n          >\n            {trackState.video ? <VideocamIcon /> : <VideocamOffIcon />}\n          </Button> */}\n        </Grid>\n        <Grid item>\n          <IconButton\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => leaveChannel()}\n          >\n            <CallEndIcon />\n          </IconButton>\n          {/* <Button\n            variant=\"outlined\"\n            color=\"default\"\n            onClick={() => leaveChannel()}\n          >\n            Leave\n            <ExitToAppIcon />\n          </Button> */}\n        </Grid>\n        <Box pl={3} />\n        <Grid item>\n          <Tooltip title=\"Participent\">\n            <IconButton>\n              <GroupsIcon />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Box flexGrow={0.3} />\n      </Grid>\n    </Box>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  config,\n  useClient,\n  useMicrophoneAndCameraTracks,\n  channelName,\n} from \"./settings.js\";\nimport { Grid, Toolbar, Box } from \"@material-ui/core\";\nimport Video from \"./Video\";\nimport Controls from \"./Controls\";\n\nexport default function VideoCall(props) {\n  const { setInCall } = props;\n  const [users, setUsers] = useState([]);\n  const [start, setStart] = useState(false);\n  const client = useClient();\n  const { ready, tracks } = useMicrophoneAndCameraTracks();\n\n  useEffect(() => {\n    let init = async name => {\n      client.on(\"user-published\", async (user, mediaType) => {\n        await client.subscribe(user, mediaType);\n        if (mediaType === \"video\") {\n          setUsers(prevUsers => {\n            return [...prevUsers, user];\n          });\n        }\n        if (mediaType === \"audio\") {\n          user.audioTrack.play();\n        }\n      });\n\n      client.on(\"user-unpublished\", (user, mediaType) => {\n        if (mediaType === \"audio\") {\n          if (user.audioTrack) user.audioTrack.stop();\n        }\n        if (mediaType === \"video\") {\n          setUsers(prevUsers => {\n            return prevUsers.filter(User => User.uid !== user.uid);\n          });\n        }\n      });\n\n      client.on(\"user-left\", user => {\n        setUsers(prevUsers => {\n          return prevUsers.filter(User => User.uid !== user.uid);\n        });\n      });\n\n      try {\n        await client.join(config.appId, name, config.token, null);\n      } catch (error) {\n        console.log(\"error\");\n      }\n\n      if (tracks) await client.publish([tracks[0], tracks[1]]);\n      setStart(true);\n    };\n\n    if (ready && tracks) {\n      try {\n        init(channelName);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [channelName, client, ready, tracks]);\n\n  return (\n    <Box\n      style={{\n        height: \"95%\",\n        background: \"#454545\",\n        borderRadius: \"8px\",\n      }}\n    >\n      <Grid\n        container\n        direction=\"column\"\n        style={{\n          height: \"95%\",\n          background: \"#454545\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n        }}\n      >\n        <Grid item style={{ height: \"90%\", overflow: \"hide\" }}>\n          {start && tracks && <Video tracks={tracks} users={users} />}\n        </Grid>\n        {/* <Toolbar /> */}\n\n        <Grid item style={{ height: \"5%\" }}>\n          {ready && tracks && (\n            <Controls\n              tracks={tracks}\n              setStart={setStart}\n              setInCall={setInCall}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport VideoCall from \"./VideoCall\";\n\nfunction App() {\n  const [inCall, setInCall] = useState(false);\n\n  return (\n    <div className=\"App\" style={{ height: \"100%\" }}>\n      {inCall ? (\n        <VideoCall setInCall={setInCall} />\n      ) : (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => setInCall(true)}\n        >\n          Join Call\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}